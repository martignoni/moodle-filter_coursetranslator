{"version":3,"file":"coursetranslator.min.js","sources":["../src/coursetranslator.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @module     filter_coursetranslator/coursetranslator\n * @copyright  2022 Kaleb Heitzman <kaleb@jamfire.io>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// import libs\nimport ajax from \"core/ajax\";\nimport * as str from \"core/str\";\n\n/**\n * Translation Editor UI\n * @param {Object} config JS Config\n */\nexport const init = (config) => {\n  // Autosave Translation String\n  let autsavedMsg = \"\";\n  str.get_string(\"t_autosaved\", \"filter_coursetranslator\").done((string) => {\n    autsavedMsg = string;\n  });\n\n  /**\n   * Convert a template string into HTML DOM nodes\n   * @param  {String} string The template string\n   * @return {Node}       The template HTML\n   */\n  const stringToHTML = (string) => {\n    // See if DOMParser is supported\n    var support = (() => {\n      if (!window.DOMParser) {\n        return false;\n      }\n      var parser = new DOMParser();\n      try {\n        parser.parseFromString(\"x\", \"text/html\");\n      } catch (err) {\n        return false;\n      }\n      return true;\n    })();\n\n    // If DOMParser is supported, use it\n    if (support) {\n      var parser = new DOMParser();\n      var doc = parser.parseFromString(string, \"text/html\");\n      return doc.body.childNodes;\n    }\n\n    // Otherwise, fallback to old-school method\n    var dom = document.createElement(\"div\");\n    dom.innerHTML = string;\n    return dom;\n  };\n\n  /**\n   * Switch Translation Language\n   */\n  let localeSwitcher = document.querySelector(\n    \".filter-coursetranslator__localeswitcher\"\n  );\n  localeSwitcher.addEventListener(\"change\", (e) => {\n    let url = new URL(window.location.href);\n    let searchParams = url.searchParams;\n    searchParams.set(\"course_lang\", e.target.value);\n    let newUrl = url.toString();\n\n    window.location = newUrl;\n  });\n\n  /**\n   * Select All Checkbox\n   */\n  const selectAll = document.querySelector(\n    \".filter-coursetranslator__select-all\"\n  );\n  if (config.autotranslate) {\n    selectAll.disabled = false;\n  }\n  selectAll.addEventListener(\"click\", (e) => {\n    // See if select all is checked\n    let checked = e.target.checked;\n    let checkboxes = document.querySelectorAll(\n      \".filter-coursetranslator__checkbox\"\n    );\n\n    // Check/uncheck checkboxes\n    if (checked) {\n      checkboxes.forEach((e) => {\n        e.checked = true;\n      });\n    } else {\n      checkboxes.forEach((e) => {\n        e.checked = false;\n      });\n    }\n    toggleAutotranslateButton();\n  });\n\n  /**\n   * Autotranslate Checkboxes\n   */\n  const checkboxes = document.querySelectorAll(\n    \".filter-coursetranslator__checkbox\"\n  );\n  if (config.autotranslate) {\n    checkboxes.forEach((e) => {\n      e.disabled = false;\n    });\n  }\n  checkboxes.forEach((e) => {\n    e.addEventListener(\"change\", () => {\n      toggleAutotranslateButton();\n    });\n  });\n\n  /**\n   * Autotranslate Button Display\n   * @returns void\n   */\n  const autotranslateButton = document.querySelector(\n    \".filter-coursetranslator__autotranslate-btn\"\n  );\n\n  /**\n   * Toggle Autotranslate Button\n   */\n  const toggleAutotranslateButton = () => {\n    let checkboxItems = [];\n    checkboxes.forEach((e) => {\n      checkboxItems.push(e.checked);\n    });\n    let checked = checkboxItems.find((checked) => checked === true)\n      ? true\n      : false;\n    if (config.autotranslate && checked) {\n      autotranslateButton.disabled = false;\n    } else {\n      autotranslateButton.disabled = true;\n    }\n  };\n\n  /**\n   * Autotranslate Button Click\n   * @returns void\n   */\n  autotranslateButton.addEventListener(\"click\", () => {\n    document\n      .querySelectorAll(\".filter-coursetranslator__checkbox:checked\")\n      .forEach((e) => {\n        let id = e.getAttribute(\"data-id\");\n        getTranslation(id);\n      });\n  });\n\n  /**\n   * Send for Translation to DeepL\n   * @param {Integer} id Translation ID\n   */\n  const getTranslation = (id) => {\n    // Get the editor\n    let editor = document.querySelector(\n      '.filter-coursetranslator__editor[data-id=\"' + id + '\"] [contenteditable=\"true\"]'\n    );\n\n    // Get the source text\n    let sourceText = document.querySelector(\n      '[data-sourcetext-id=\"' + id + '\"]'\n    ).innerHTML;\n\n    // Build formData\n    let formData = new FormData();\n    formData.append(\"text\", sourceText);\n    formData.append(\"source_lang\", \"en\");\n    formData.append(\"target_lang\", config.lang);\n    formData.append(\"preserve_formatting\", 1);\n    formData.append(\"auth_key\", config.apikey);\n    formData.append(\"tag_handling\", \"xml\");\n    formData.append(\"split_sentences\", \"nonewlines\");\n\n    // DeepL URL\n    let url = \"https://api.deepl.com/v2/translate\";\n\n    // Update the translation\n    let xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        var status = xhr.status;\n        if (status === 0 || (status >= 200 && status < 400)) {\n          // The request has been completed successfully\n          let data = JSON.parse(xhr.responseText);\n          window.console.log(\"deepl:\", id, data);\n          // Display translation\n          editor.innerHTML = data.translations[0].text;\n          // Save translation\n          saveTranslation(id, data.translations[0].text, editor);\n        } else {\n          // Oh no! There has been an error with the request!\n          window.console.log(\"error\", status);\n        }\n      }\n    };\n    xhr.open(\"POST\", url);\n    xhr.send(formData);\n  };\n\n  /**\n   * Save Translation to Moodle\n   * @param  {Integer} id Translation ID\n   * @param  {String} translation Translation Text\n   * @param  {Node} editor HTML Editor Node\n   */\n  const saveTranslation = (id, translation, editor) => {\n\n    // Success Message\n    const successMessage = () => {\n      editor.classList.add(\"filter-coursetranslator__success\");\n      // Add saved indicator\n      let indicator =\n        '<div class=\"filter-coursetranslator__success-message\" data-id=\"' +\n        id +\n        '\">' +\n        autsavedMsg +\n        \"</div>\";\n      editor.after(...stringToHTML(indicator));\n\n      // Remove success message after a few seconds\n      setTimeout(() => {\n        let indicatorNode = document.querySelector(\n          '.filter-coursetranslator__success-message[data-id=\"' + id + '\"]'\n        );\n        editor.parentNode.removeChild(indicatorNode);\n      }, 3000);\n    };\n\n    // Error Mesage\n    const errorMessage = () => {\n      editor.classList.add(\"filter-coursetranslator__error\");\n    };\n\n    // Submit the request\n    ajax.call([\n      {\n        methodname: \"filter_coursetranslator_update_translation\",\n        args: {\n          translation: [\n            {\n              id: id,\n              course_id: config.course_id, // eslint-disable-line\n              translation: translation,\n            },\n          ],\n        },\n        done: (data) => {\n          window.console.log(\"ws: \", id, data);\n          if (data.length > 0) {\n            successMessage();\n          } else {\n            errorMessage();\n          }\n        },\n        fail: (error) => {\n          window.console.log(\"error: \", error);\n          errorMessage();\n          editor.classList.addClass(\"filter-coursetranslator__error\");\n          window.console.log(error);\n        },\n      },\n    ]);\n  };\n\n  /**\n   * Get the Translation using Moodle Web Service\n   * @returns void\n   */\n  document\n    .querySelectorAll(\n      '.filter-coursetranslator__editor [contenteditable=\"true\"]'\n    )\n    .forEach((editor) => {\n      // Save translation\n      editor.addEventListener(\"focusout\", () => {\n        let translation = editor.innerHTML;\n        let id = editor\n          .closest(\".filter-coursetranslator__editor\")\n          .getAttribute(\"data-id\");\n        window.console.log(id, translation);\n\n        saveTranslation(id, translation, editor);\n      });\n\n      // Remove status classes\n      editor.addEventListener(\"click\", () => {\n        editor.classList.remove(\"filter-coursetranslator__success\");\n        editor.classList.remove(\"filter-coursetranslator__error\");\n      });\n    });\n};\n"],"names":["config","autsavedMsg","str","get_string","done","string","document","querySelector","addEventListener","e","url","URL","window","location","href","searchParams","set","target","value","newUrl","toString","selectAll","autotranslate","disabled","checked","checkboxes","querySelectorAll","forEach","toggleAutotranslateButton","autotranslateButton","checkboxItems","push","find","id","getAttribute","getTranslation","editor","sourceText","innerHTML","formData","FormData","append","lang","apikey","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","data","JSON","parse","responseText","console","log","translations","text","saveTranslation","open","send","translation","successMessage","classList","add","indicator","after","DOMParser","parser","parseFromString","err","body","childNodes","dom","createElement","stringToHTML","setTimeout","indicatorNode","parentNode","removeChild","errorMessage","call","methodname","args","course_id","length","fail","error","addClass","closest","remove"],"mappings":"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"}